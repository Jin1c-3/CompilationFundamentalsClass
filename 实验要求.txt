编程实现一个C语言子集的词法分析器，要求至少包含以下功能：
(1) 编程实现以字母、_等字符打头的用户标识符的识别；
(2) 编程实现无符号整数的识别；
(3) 编程实现无符号浮点数的识别；
(4) 编程实现保留字(包括系统函数名)的识别；
(5) 编程实现算术运算符、逻辑运算符的识别；
(6) 编程实现关系运算符的识别；
(7) 编程实现分隔符的识别；
(8) 编程实现非法字符的报错；
(9) 构造一个保留字表reslist，并事先将保留字存入其中；
(10)构造一个用户标识符表idlist，包含标识符名、标识符类型、存储长度等字段。词法分析器运行过程中将用户源程序中出现的用户标识符(包括用户变量名、用户函数名等)填入用户标识符表中的标识符名字段，而标识符类型、存储长度等字段在词法分析阶段为空，这些字段在编译过程的后续阶段填入。
注意1：源程序中若某个用户标识符(比如变量x)出现多次则对应着多个单词，即每次出现都对应一个单词二元式，但其在用户标识符表中只对应1项。
注意2：源程序中的单词二元式必须按出现顺序排列，而用户标识符表中的标识符由于需要查重故可以按ASCII码排序也可以按出现顺序排列{分别对应折半查找和顺序查找}。
(11)构造一个无符号整数的常数表uintlist，包含数值、类型、存储长度等字段。词法分析器运行过程中将用户源程序中出现的无符号整数填入数值字段，而类型、存储长度等字段为空，这些字段在编译过程的后续阶段填入。
(12)构造一个无符号浮点数的常数表ufdlist，包含数值、类型、存储长度等字段。词法分析器运行过程中将用户源程序中出现的无符号浮点数填入数值字段，而类型、存储长度等字段为空，这些字段在编译过程的后续阶段填入。
(13)词法分析器从input文件读入一小段C语言源程序语句，按顺序输出其所有单词的二元式。输出的单词二元式在显示器上显示并存入output文件。C语言源程序中所有的用户标识符都要添加到用户标识符表idlist中，所有的无符号整数都要添加到常数表uintlist中，所有的无符号浮点数都要添加到常数表ufdlist中。
(14)程序的输出文件至少包括output、idlist、uintlist、ufdlist，其中output文件中必须是顺序存放的单词二元式序列。
